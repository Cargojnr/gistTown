          <p>
                ${secret.secret}
                <a id="pinnedButton" class="read"
                href="#secret${secret.id}"
                  style="
                    background: none;
                    font-size: 1rem;
                    padding: 0;
                    font-weight: bold;
                  "
                  >View secret</a
                >
              </p>


              <div class="secret-card" data-id="<%= secret.id %>">
                <div class="reactions">
                    <button class="reaction-btn" data-type="like">
                        üëç
                        <span class="reaction-count">
                            <%= secret.reactions.like ? secret.reactions.like.count : 0 %>
                        </span>
                    </button>
                    <button class="reaction-btn" data-type="laugh">
                        üòÇ
                        <span class="reaction-count">
                            <%= secret.reactions.laugh ? secret.reactions.laugh.count : 0 %>
                        </span>
                    </button>
                    <button class="reaction-btn" data-type="cry">
                        üò¢
                        <span class="reaction-count">
                            <%= secret.reactions.cry ? secret.reactions.cry.count : 0 %>
                        </span>
                    </button>
                    <button class="reaction-btn" data-type="gasp">
                        üò±
                        <span class="reaction-count">
                            <%= secret.reactions.gasp ? secret.reactions.gasp.count : 0 %>
                        </span>
                    </button>
                </div>
                <button><i class="fas fa-copy"></i></button>
            </div>

            <p class="footer-text">
                <a href="">GistTown</a> lets you share secrets anonymously online,
                End-to-End encrypted. One time. Keep anonymous secrets out of email,
                Whatsapp, Telegram or any other communication channel. Here you are
                100% hidden to users as your privacy is our priority.
              </p>
            
              if (type === "audio") {
            } else {
                return res.status(400).json({ message: "Invalid type" });
              }

              socket.on("receive-reaction", () => {
                reactionTotal++;
                reactionCount.classList.remove("hidden");
                reactionCount.textContent = `‚ù§Ô∏è ${reactionTotal}`;
              
                const float = document.createElement("div");
                float.className = "floating-reaction";
                float.textContent = "‚ù§Ô∏è";
                float.style.left = `${Math.random() * 100}%`;
                document.getElementById("floatingReactions").appendChild(float);
                setTimeout(() => float.remove(), 1500);
              });



              socket.on("update-listener-count", (count) => {
                listeners = count;
                listenerCount.textContent = `üëÇ ${listeners} listening`;
              });
              
              socket.on("listener-joined", ({ streamUserId, avatarUrl }) => {
                if (!isStreaming || streamUserId !== currentUserId) return;
                const icon = document.createElement("img");
                icon.src = `../.${avatarUrl}`;
                icon.className = "listener-avatar pop-in";
                const avatarBox = document.getElementById("listenerAvatars");
              if (avatarBox) avatarBox.appendChild(icon);
              
                setTimeout(() => {
                  icon.classList.add("fade-out");
                  setTimeout(() => icon.remove(), 1000);
                }, 5000);
              });

              <header>
                <div class="container">
                  <div class="header">
                    <img src="../img/logo/gossipa.png" alt="" id="logo">
                    <div class="topbar-icons">
                    <form id="liveSearchForm" action="/search" method="post" autocomplete="off">
                      <div class="search" id="mobileSearch">
                        <button class="search-btn" type="submit" id="toggleSearch">
                          <i class="fa-solid fa-magnifying-glass"></i>
                        </button>
                        <input name="search" type="text" id="searchInput" placeholder="Search">
                      </div>
                      <ul id="suggestions" class="suggestion-box"></ul>
                    </form>
                    
                            <ul id="navbar">
                      <li class="navbar">
                        <a class="nav-link" href="/notifications">
                          <i class="fas fa-bell fa-2x"></i>
                          <span class="counter">0</span>
                        </a>
                      </li>
                      <li class="navbar profiled">
                        <button class="nav-btn avatar-profile thumb"><img src="<%= profilePicture ?'../.' + profilePicture: profilePicture %>" alt="" class="profile-pic thumb"></button>
                      </li>
                      <li class="navbar dropdown">
                        <div class="hamburger" id="hamburger">
                          <div class="bar" id="bar1"></div>
                          <div class="bar" id="bar3"></div>
                        </div>
                        </li>
                      </div>
                        <div id="menu" class="menu-hidden">
                          <div class="container">
                            <div class="profile-header">
                              <img src="<%= profilePicture ? profilePicture : '../.' + profilePicture %>" alt="Profile Avatar" class="profile-avatar" />
            
                              <h3 class="username">Hello, <span class="username">
                                @amebo<%= userId %> 
                                <% if(verification === true) {%>
                                <img src="../../img/badge3.png" alt="">
                                <% } else {%>
                               <% } %>
                              </span></h3>
                            </div>
            
                            <div class="menu">
                              <div class="menu-nav">
                    
                                <ul class="pages">
                                  <h4>Compose a gist</h4>
                                  <li><a class="nav-link" href="/feeds">View Gist</a></li>
                                  <li><a class="nav-link" href="/submit">Share a Gist</a></li>
                                  <li>
                                    <a class="nav-link" href="/notifications" class="">Notifcations</a>
                                  </li>
                                </ul>
                                <ul class="account">
                                  <h4>Account</h4>
                                  <li>
                                    <a class="nav-link" href="/notifications" class="">Go To Profile</a>
                                  </li>
                                  <li><a class="nav-link" href="/profile">Edit Profile</a></li>
            
                                  <li>
                                    <form action="/logout" method="POST">
                                      <button type="submit">Logout <i class="fas fa-right-from-bracket"></i></button>
                                    </form>
                                  </li>
                                </ul>
                              </div>
            
                              <ul class="socials">
                                <li>
                                  <a class="nav-link" target="_blank" href="https://t.me/anonymcret"><i
                                      class="fab fa-telegram fa-2x"></i></a>
                                </li>
                                <li>
                                  <a class="nav-link" target="_blank" href=""><i class="fab fa-instagram fa-2x"></i></a>
                                </li>
                                <li>
                                  <a class="nav-link" target="_blank" href=""><i class="fab fa-linkedin fa-2x"></i></a>
                                </li>
                                <li>
                                  <a class="nav-link" target="_blank" href=""><i class="fab fa-github fa-2x"></i></a>
                                </li>
                              </ul>
                              <hr />
                              <div class="menu-nav-alt">
                                <ul class="info">
                                  <h4>Information</h4>
                                  <li><a href="">About</a></li>
                                  <li><a href="">Security</a></li>
                                  <li><a href="">Privacy</a></li>
                                  <li><a href="">Blog</a></li>
                                </ul>
                                <ul class="support">
                                  <h4>Support</h4>
                                  <li><a href="">FAQ</a></li>
                                  <li><a href="">Contact</a></li>
                                  <li><a href="/feedback">Reviews</a></li>
                                </ul>
                              </div>
                              <p class="menu-lang">
                                <i class="fas fa-globe"></i> English
                              </p>
                              <button id="close">Close</button>
                            </div>
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                </div>
                <div id="announcement">
               
                </div> 
              </header>

              
        <form id="selectCategory" class="menu-category" method="POST">
          <button class="category-item" data-category="love">All</button>
          <button class="category-item" data-category="love">‚ù§Ô∏è Love</button>
          <button class="category-item" data-category="funny">üòÇ Funny</button>
          <button class="category-item" data-category="nasty">üòà Nasty</button>
          <button class="category-item" data-category="sassy">üíÖ Sassy</button>
          <button class="category-item" data-category="hilarious">ü§£ Hilarious</button>
          <button class="category-item" data-category="random">üé≤ Random</button>

        </form>
         
              
        <script>
          const catMenu = document.getElementById("selectCategory");

          catMenu.addEventListener("wheel", (e) => {
            if (e.deltaY === 0) return;
            e.preventDefault();
            catMenu.scrollLeft += e.deltaY;
          }, { passive: false });

          // Optional: Auto-scroll to active category
          const activeCat = catMenu.querySelector(".category-item.active");
          if (activeCat) {
            activeCat.scrollIntoView({ behavior: "smooth", inline: "center" });
          }

          document.querySelectorAll(".category-item").forEach((btn) => {
            btn.addEventListener("click", (e) => {
              e.preventDefault()
              // Haptic feedback if supported
              if (navigator.vibrate) {
                navigator.vibrate(10); // light tap feedback
              }

              // Optional: update active class manually
              document.querySelectorAll(".category-item").forEach(b => b.classList.remove("active"));
              btn.classList.add("active");

              // Scroll into center
              btn.scrollIntoView({ behavior: "smooth", inline: "center" });
            });
          });


        </script>

        
    #selectCategory {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: .5rem;
    }



<script>
  // Gossipa - Category-Based Secret Fetcher with Shimmer UI and Haptic Feedback
  
  // Utility: Detect Mobile Device
  const isMobile = /Mobi|Android/i.test(navigator.userAgent);
  
  document.addEventListener("DOMContentLoaded", () => {
    const menu = document.querySelector(".menu-category");
    const secretsContainer = document.getElementById("secrets-container");
    const shimmerTemplate = document.getElementById("shimmerTemplate");
    const feeds = document.querySelector("#feeds #secrets");
    const categoryItems = document.querySelectorAll(".category-item");
  
    categoryItems.forEach((item) => {
      item.addEventListener("click", async (e) => {
        const selectedCategory = e.target.closest(".category-item").dataset.category.toLowerCase();
  
        // Haptic feedback (only on mobile)
        if (isMobile && navigator.vibrate) navigator.vibrate(10);
  
        // Visually mark selected category
        categoryItems.forEach((btn) => btn.classList.remove("active"));
        item.classList.add("active");
        item.scrollIntoView({ behavior: "smooth", inline: "center" });
  
        try {
          // Begin shimmer animation
          secretsContainer.innerHTML = "";
          for (let i = 0; i < 3; i++) {
            const shimmer = shimmerTemplate.content.cloneNode(true);
            secretsContainer.appendChild(shimmer);
          }
          secretsContainer.classList.remove("fade-out");
          secretsContainer.classList.add("fade-in");
  
          // Fetch secrets from server
          const response = await fetch(`/feeds/${selectedCategory}`);
          if (!response.ok) throw new Error("Failed to fetch secrets");
  
          const secrets = await response.json();
          secretsContainer.innerHTML = "";
  
          if (Array.isArray(secrets.secrets) && secrets.secrets.length > 0) {
            feeds.style.display = "none";
  
            secrets.secrets.forEach((secret) => {
              const secretHTML = `
               <li class="secret full-width" id="secret${ secret.id }">
                <div class="card">
                  <span class="tag ${secret.category}">${secret.category}</span>
                  <div class="card-header">
                    <div class="avatar-profile">
                      <img src="../.${secret.profile_picture}" class="profile-pic" alt="Avatar Profile">
                    </div>
                    <div class="user-info">
                      <span class="tag ${secret.category}">${secret.category}</span>
                      <p class="username">
                        @gossipa${secret.user_id}
                        <img src="${secret.verified == true ? "../../img/badge.png" : " "}" style="display: ${secret.verified == true ? "inline-block" : "none"}" alt="Verification Badge" />
                        </p>
                    </div>
                  </div>
                  <div class="card-content">
                    <p>
                      <span class="content">${secret.secret.substring(0, 250)}...</span>
  
                      <button data-full="${ secret.secret }"
                                                    data-truncated="${ secret.secret.substring(0, 250) + '...' }" class="read">Read More</button>
                    </p>
                  </div>
                <div class="comment-section" data-secret-id="${ secret.id }">
  
                                                <div class="reactions sleek">
                                                  <div class="secret-card" data-id="${ secret.id }">
                                                    <div class="reactions">
                                                      <button class="reaction-btn reaction" data-type="like">
                                                        <span class="reaction-count">
                                                          ${ secret.reactions.like ? secret.reactions.like.count : 0 }
                                                        </span>
                                                      </button>
                                                    </div>
  
                                                    <div class="floating-lottie" data-type="like"></div>
                                                  </div>
  
                                                  <button id="commentButton" class="reaction-btn"><i
                                                      class="fas fa-comment"></i><span class="comment-count"></span>
                                                  </button>
  
                                                </div>
  
                                                <div class="comment-dropdown" id="commentDropdown">
                                                  <form class="comment-display" method="POST" id="commentDisplay">
                                                    <ul id="comments" class="comments-list"></ul>
                                                  </form>
  
                                                  <form action="/comment" method="POST" id="comment-form">
                                                    <input type="hidden" name="id" id="secretId"
                                                      value="${ secret.id }" />
                                                    <input type="hidden" name="secretUserId"
                                                      value="${ secret.user_id }" />
                                                    <input type="hidden" name="commentUserId" value="${ secret.userId }" />
                                                    <textarea id="commentInput" placeholder="Write a comment..."
                                                      name="comment"></textarea>
                                                    <button id="postCommentButton">
                                                      Post
                                                    </button>
                                                  </form>
  
                                                </div>
                                              </div>
  
  
                                              <ul class="card-menu">
                                                <li>
                                                  <button class="menu-toggle-btn"><i
                                                      class="fas fa-ellipsis-vertical"></i></button>
                                                  <ul class="card-menu-content" style="display: none;">
                                                    <li>
                                                      <button class="report-btn" data-id="${ secret.id }">
                                                        <i class="fa-regular fa-flag"></i>Report
                                                      </button>
                                                    </li>
                                                    <li>
                                                      <button class="copy-btn">
                                                        <i class="fas fa-copy">Copy</i>
                                                      </button>
                                                    </li>
                                                  </ul>
                                                </li>
                                              </ul>
  
  
                </div>
                </li>
              `;
              secretsContainer.insertAdjacentHTML("beforeend", secretHTML);
            });
          } else {
            feeds.style.display = "block";
          }
        } catch (error) {
          console.error(error);
          secretsContainer.innerHTML = `<p class="error">No secrets available</p>`;
        }
      });
    });
  });
                </script>

<div id="recordContainer">
  <h1>Record a Voice Note</h1>
  <button id="micButton" class="mic-button" tabindex="0"><i class="fas fa-microphone"></i></button>

  <!-- Canvas for waveform visualization -->
  <!-- <canvas id="waveform"></canvas> -->

  <!-- Action buttons (discard/share) -->
  <div id="actionButtons">
      <button id="discardRecording">Discard</button>
      <button id="submitRecording">Share</button>
  </div>

  <!-- Audio player for playback after recording -->
  <audio id="audioPlayer" controls style="display:none;"></audio>
</div>




reactionTotal = 0;
reactionCount.textContent = "";
reactionCount.classList.add("hidden");
document.getElementById("floatingReactions").innerHTML = "";


            
              
// Gossipa Live Stream Handling
const endModal = document.getElementById('endStreamModal');
const saveStoryBtn = document.getElementById('saveStory');
const discardStreamBtn = document.getElementById('discardStream');
const youAreLiveBadge = document.getElementById('liveBadge');
const streamEndedNotice = document.getElementById('streamEndedNotice');
const streamId = endStreamBtn?.dataset.streamId; // Presuming streamId is passed in dataset

// Utility: Show modal
function showModal(modal) {
  modal.classList.add('visible');
}

// Utility: Hide modal
function hideModal(modal) {
  modal.classList.remove('visible');
}

// End button triggers confirmation modal
endStreamBtn?.addEventListener('click', () => {
  showModal(endModal);
});

// Save stream as story
saveStoryBtn?.addEventListener('click', async () => {
  try {
    const res = await fetch(`/api/streams/${streamId}/save`, {
      method: 'POST',
    });

    if (!res.ok) throw new Error('Failed to save');

    youAreLiveBadge?.classList.add('fade-out');
    streamEndedNotice?.classList.add('fade-in');
    endStreamBtn?.classList.add('hide');

    hideModal(endModal);
  } catch (err) {
    console.error('Error saving stream:', err);
  }
});

// Discard the stream
discardStreamBtn?.addEventListener('click', async () => {
  try {
    const res = await fetch(`/api/streams/${streamId}/discard`, {
      method: 'DELETE',
    });

    if (!res.ok) throw new Error('Failed to discard');

    youAreLiveBadge?.classList.add('fade-out');
    streamEndedNotice?.classList.add('fade-in');
    endStreamBtn?.classList.add('hide');

    hideModal(endModal);
  } catch (err) {
    console.error('Error discarding stream:', err);
  }
});

function showToast(message) {
  const toast = document.createElement('div');
  toast.className = 'gossipa-toast';
  toast.textContent = message;
  document.body.appendChild(toast);

  setTimeout(() => {
    toast.classList.add('fade-out');
    toast.addEventListener('animationend', () => toast.remove());
  }, 3000);
}
