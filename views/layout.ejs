<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet" />
  <script src="https://kit.fontawesome.com/ceb8cfc409.js" crossorigin="anonymous"></script>
  <script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/dayjs@1/plugin/relativeTime.js"></script>
  <link rel="stylesheet" href="/styles/style.css" />
  <link rel="stylesheet" href="/styles/media.css" />
  <link rel="stylesheet" href="/styles/new.css" />
</head>

<body>

  <script>
    let lottiePlayer = null;

    window.addEventListener("load", function () {
      window.scrollTo({ top: 0, behavior: "smooth" });
    });
</script>


  <header>
    <div class="container">
      <div class="header">
        <a class="nav-link" href="../../dashboard" id="logo"><i class="fas fa-mask fa-2x"></i></a>
        <form id="liveSearchForm" action="/search" method="post" autocomplete="off">
          <div class="search">
            <button class="search-btn" type="submit">
              <i class="fa-solid fa-magnifying-glass"></i>
            </button>
            <input name="search" type="text" id="searchInput" placeholder="Search">
          </div>
          <ul id="suggestions" class="suggestion-box"></ul>
        </form>
                <ul id="navbar">
          <li class="navbar">
            <a class="nav-link" href="/notifications">
              <i class="fas fa-bell fa-2x"></i>
              <span class="counter">0</span>
            </a>
          </li>
          <li class="navbar profiled">
            <button class="nav-btn avatar-profile thumb"><img src="<%= profilePicture ? profilePicture : '../.' + profilePicture %>" alt="" class="profile-pic thumb"></button>
          </li>
          <li class="navbar dropdown">
            <div class="hamburger" id="hamburger">
              <div class="bar" id="bar1"></div>
              <!-- <div class="bar" id="bar2"></div> -->
              <div class="bar" id="bar3"></div>
            </div>
            <div id="menu" class="menu-hidden">
              <div class="container">
                <div class="profile-header">
                  <img src="<%= profilePicture ? profilePicture : '../.' + profilePicture %>" alt="Profile Avatar" class="profile-avatar" />

                  <h3 class="username">Hello, <span>@amebo<%= userId %></span></h3>
                </div>

                <div class="menu">
                  <div class="menu-nav">
                    <!-- <div class="menu-logo">
                                            <i class="fas fa-mask fa-2x"></i>
                                            <h4>bAnonym</h4>
                                        </div> -->
                    <ul class="pages">
                      <h4>Compose a gist</h4>
                      <li><a class="nav-link" href="/feeds">View Gist</a></li>
                      <li><a class="nav-link" href="/submit">Share a Gist</a></li>
                      <li>
                        <a class="nav-link" href="/notifications" class="">Notifcations</a>
                      </li>
                    </ul>
                    <ul class="account">
                      <h4>Account</h4>
                      <li>
                        <a class="nav-link" href="/notifications" class="">Go To Profile</a>
                      </li>
                      <li><a class="nav-link" href="/profile">Edit Profile</a></li>

                      <li>
                        <a class="nav-link" href="/logout" class="">Logout <i class="fas fa-right-from-bracket"></i></a>
                      </li>
                    </ul>
                  </div>

                  <ul class="socials">
                    <li>
                      <a class="nav-link" target="_blank" href="https://t.me/@iamamebo"><i
                          class="fab fa-telegram fa-2x"></i></a>
                    </li>
                    <li>
                      <a class="nav-link" target="_blank" href=""><i class="fab fa-instagram fa-2x"></i></a>
                    </li>
                    <li>
                      <a class="nav-link" target="_blank" href=""><i class="fab fa-linkedin fa-2x"></i></a>
                    </li>
                    <li>
                      <a class="nav-link" target="_blank" href=""><i class="fab fa-github fa-2x"></i></a>
                    </li>
                  </ul>
                  <hr />
                  <div class="menu-nav-alt">
                    <ul class="info">
                      <h4>Information</h4>
                      <li><a href="">About</a></li>
                      <li><a href="">Security</a></li>
                      <li><a href="">Privacy</a></li>
                      <li><a href="">Blog</a></li>
                    </ul>
                    <ul class="support">
                      <h4>Support</h4>
                      <li><a href="">FAQ</a></li>
                      <li><a href="">Contact</a></li>
                      <li><a href="/feedback">Reviews</a></li>
                    </ul>
                  </div>
                  <p class="menu-lang">
                    <i class="fas fa-globe"></i> English
                  </p>
                  <button id="close">Close</button>
                </div>
              </div>
            </div>
          </li>
        </ul>
      </div>
    </div>
    <div id="announcement">
      <!-- <div id="pinned" class="pinned-secret">
        <div id="countdown" style="margin-top: 20px; font-weight: bold; text-align: center;"></div>
      </div>
    </div> -->
  </header>


    <div id="milestone-badge" class="hidden">üéâ 10 Reactions! üéâ</div>

    <div id="announcement-overlay" class="hidden">
      <div class="trumpet-animation"></div>
      <div class="overlay-content" text-align="center">
        <center>
          <h2>Announcement! üéáüéÜ</h2>
          <h4>Top Most Discussed Gist</h4>
          <!-- <p id="pin-secret"></p> -->
          <small id="posted-by"></small>
          <div id="countdown-timer">5</div>
        </center>
      </div>
      <button id="close-announcement" class="btn btn-dark btn-lg">Close</button>
    </div>

    
    <div class="theme-switch">
      <input type="checkbox" id="themeToggle" class="theme-toggle" onchange="toggleMode()" />
      <label for="themeToggle" class="theme-toggle-label">
        <span class="sun-icon">‚òÄÔ∏è</span>
        <span class="moon-icon">üåô</span>
      </label>
    </div>

    <!-- Content of each page will be injected here -->

  <!-- Notifications Container -->
  <div id="notification" style="position: fixed; bottom: 10px; left: 10px; z-index: 1000"></div>

  <script>
    const currentUserId = "<%= userId %>";
    const socket = io({ query: { userId: currentUserId } });
    const counter = document.querySelector(".counter");

    // Handle new notifications
    socket.on("new-notification", (data) => {
      // Increment the notification counter
      const currentCount = parseInt(counter.textContent) || 0;
      counter.textContent = currentCount + 1;

      const notificationsDiv = document.getElementById("notification");
      const notification = document.createElement("div");
      notification.className = "notification";

      // Display a notification if it's a "secret" type
      if (data.type === "secret") {
        notification.innerText = `New secret shared by ~~@anonym${data.data.userId}~~: "${data.data.secret}"`;
      } else if (data.type === "selected") {
        notification.innerText = `~~@anonym${data.data.userId}~~ Your secret is the top most discussed for the Day...... Keep it up!"`;
        notificationsDiv.style.textAlign = "center"
      } else if (data.type === "reaction") {
        const { reaction, count, milestone } = data.data;
        notification.innerText =
          `Your secret received a new "${reaction}" reaction! Total: ${count}.`
      } else if (data.type === "top-secret") {
        notification.innerText = `Most discussed secret goes to ~~@anonym${data.data.userId}~~"`;
      }

      notificationsDiv.appendChild(notification);

      // Automatically remove the notification after 5 seconds
      setTimeout(() => {
        notification.remove();
      }, 5000);

    });
  </script>

  <script>
    const showAnnouncement = (secret) => {
      const overlay = document.getElementById("announcement-overlay");
      // const secretText = document.getElementById("pin-secret");
      const postedBy = document.getElementById("posted-by");
      const countdownTimer = document.getElementById("countdown-timer");
      const closeButton = document.getElementById("close-announcement");

      // secretText.textContent = `"${secret.secret}"`;
      postedBy.textContent = `Goes to ~~@anonym${secret.user_id}~~`;

      let countdown = 5;
      const countdownInterval = setInterval(() => {
        countdown -= 1;
        countdownTimer.textContent = countdown;

        if (countdown === 0) {
          clearInterval(countdownInterval);
          setTimeout(() => {
            overlay.classList.add("hidden");
            pinSecret(secret);
          }, 1000);
        }
      }, 1000);

      overlay.classList.remove("hidden");

      closeButton.addEventListener("click", () => {
        overlay.classList.add("hidden");
        pinSecret(secret);
      });
    };
    
  </script>

  <script>
    const reactToSecret = async (secretId, type) => {
      try {
        const response = await fetch(`/secrets/${secretId}/react`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ type }),
        });

        const data = await response.json();
        console.log(data)

        if (data.success) {
          // Update the reactions count on the UI
          const secretCard = document.querySelector(
            `[data-id="${secretId}"]`
          );
          const reactionCount = secretCard.querySelector(
            `.reaction-btn[data-type="${type}"] .reaction-count`
          );
          reactionCount.textContent = data.reactions[type] || 0;

          // Trigger confetti if milestone is reached
          if (data.milestone) {
            triggerConfetti();
            showMilestoneBadge();
          }
        } else {
          console.error(data.error);
        }
      } catch (error) {
        console.error("Error reacting:", error);
      }
    };

    function triggerConfetti() {
      confetti({
        particleCount: 100, // Number of confetti particles
        spread: 70, // Spread angle
        origin: { y: 0.6 }, // Start position
        colors: ["#ff6f61", "#ffcc00", "#66ff99", "#6699ff", "#ff99cc"], // Custom colors
      });
    }

    function showMilestoneBadge() {
      const badge = document.getElementById("milestone-badge");
      badge.classList.remove("hidden");

      setTimeout(() => {
        badge.classList.add("hidden");
      }, 5000); // 5 seconds
    }
  </script>

<script>
  const searchInput = document.getElementById("searchInput");
  const suggestionsBox = document.getElementById("suggestions");

  let debounceTimer;

  searchInput.addEventListener("keyup", function () {
    clearTimeout(debounceTimer);
    const query = this.value.trim();

    if (query.length === 0) {
      suggestionsBox.innerHTML = "";
      return;
    }

    debounceTimer = setTimeout(() => {
      fetch("/search", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ search: query })
      })
        .then(res => res.json())
        .then(data => {
          suggestionsBox.innerHTML = "";

          if (data.searchResults.length === 0) {
            suggestionsBox.innerHTML = "<li class='no-result'>No result found</li>";
            return;
          }

          function highlightMatch(text, keyword) {
  const regex = new RegExp(`(${keyword})`, "gi");
  return text.replace(regex, '<mark>$1</mark>');
}

data.searchResults.forEach(item => {
  const li = document.createElement("li");
  li.classList.add("suggestion-item");

  const highlightedText = highlightMatch(item.secret, query);

  li.innerHTML = `
    <span class="arrow">‚Üí</span>
    <span class="text">${highlightedText}</span>
  `;

  li.addEventListener("click", () => {
    window.location.href = `/secret/${item.id}`; // adjust if needed
  });

  suggestionsBox.appendChild(li);
});

        })
        .catch(err => console.error("Live search error:", err));
    }, 300); // 300ms debounce
  });
</script>


</body>

</html>