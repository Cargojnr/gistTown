<!DOCTYPE html>
<html lang="en">
  <head>
    <head>
      <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-5HK86H1GRP"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
    
      gtag('config', 'G-5HK86H1GRP');
    </script>
    <script type="text/javascript">
      var _iub = _iub || [];
      _iub.csConfiguration = {"siteId":4248251,"cookiePolicyId":92947488,"lang":"en","storage":{"useSiteId":true}};
      </script>
      <script type="text/javascript" src="https://cs.iubenda.com/autoblocking/4248251.js"></script>
      <script type="text/javascript" src="//cdn.iubenda.com/cs/gpp/stub.js"></script>
      <script type="text/javascript" src="//cdn.iubenda.com/cs/iubenda_cs.js" charset="UTF-8" async></script>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- Meta Tags for SEO -->
    <meta
      name="description"
      content="Share gists talesly with end-to-end encryption. Echoes guarantees your privacy with 100% anonymity."
    />
    <meta
      name="keywords"
      content="anonymity, tales sharing, encrypted messaging, privacy, end-to-end encryption, anonymous communication"
    />
    <meta name="robots" content="index, follow" />
    <meta name="author" content="Echoes" />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content="Echoes - Share Gists talesly" />
    <meta
      property="og:description"
      content="Share your gist talesly with Echoes. Your privacy is our priority with full end-to-end encryption."
    />
    <meta property="og:image" content="/img/og-image.png" />
    <meta property="og:url" content="https://yourwebsite.com" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Echoes - Share Gists talesly" />
    <meta
      name="twitter:description"
      content="Share your gists talesly with Echoes. Your privacy is our priority with full end-to-end encryption."
    />
    <meta name="twitter:image" content="/img/twitter-image.png" />

    <script
      src="https://kit.fontawesome.com/ceb8cfc409.js"
      crossorigin="anonymous"
    ></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lottie-web/5.12.0/lottie.min.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap"
      rel="stylesheet"
    />

    <link rel="stylesheet" href="/styles/style.css" />
    <link rel="stylesheet" href="/styles/new.css" />
    <link rel="stylesheet" href="/styles/media.css" />

    <title>Echoes - Share gists talesly || Signup An Account.</title>

    <style>

.layout-container{
      display: flex;
      flex-direction: column !important;
      justify-content: center !important;
      align-items: center !important;
    }

.scrolled {
  background: var(--container-bg);
}
      #logo {
        opacity: 0;
        transition: opacity 0.2s ease-in-out;
      }

      #brand-logo-container{
        background: var(--body-bg);
      }
  
        body {
          font-family: 'IBM Plex Sans', sans-serif;
          background: var(--body-bg);

        }

        .profile-header {
    display: flex;
    gap: 1rem;
    align-items: center;
    flex-wrap: wrap;
    background: var(--glass-bg);
    padding: 1rem;
    border-radius: 30px;
    height: 10vh;
  }
  
        .form-container {
          /* background: rgba(0, 0, 0, 0.5); */
          background: var(--container-bg);
          max-width: 900px;
          width: 100%;
          padding: 1.5rem !important;
        }
  
        .form-control {
          border: 2px solid #1e2a3f;
        }
  
        .form-control:focus {
          border-color: #6a7bff !important;
          outline: none;
        }
  
        .btn {
          background-color: #6a7bff;
          color: #fff;
          border: none;
          border-radius: 8px;
          cursor: pointer;
          transition: background-color 0.3s ease;
        }
  
        .btn:hover {
          background-color: #1e2a3f;
        }
  
        footer {
          padding: 2rem 0;
        }

  
        @media (max-width: 768px) {
          .hero h1 {
            font-size: 2.5rem;
          }
  
          .hero p {
            font-size: 1.2rem;
          }
  
          .form-container {
            padding: 1.5rem;
          }
        }

        .footer-part {
          color: #777;
          width: 2px;
          height: 50px;

        }

             
.avatar-selector-wrapper {
  margin: 2rem auto;
  max-width: 90%;
  text-align: center;
  cursor: pointer;
}

.carousel-container {
  position: relative;
  overflow: hidden;
}

.center-highlight {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 50%;
  width: 100px;
  height: 100px;
  transform: translateX(-50%);
  border-radius: 50%;
  z-index: 10;
  pointer-events: none;
  border: 2px solid var(--primary-color);
  box-shadow: 0 0 10px var(--primary-color);
  animation: pulse 2s infinite alternate;
}

@keyframes pulse {
  from { box-shadow: 0 0 10px var(--primary-color); }
  to   { box-shadow: 0 0 25px var(--primary-color), 0 0 40px rgba(127,90,240,.4); }
}

.avatar-carousel {
  display: flex;
  overflow-x: auto;
  margin: auto;
  gap: 1.5rem;
  scroll-behavior: smooth;
  padding: .75rem 0;
  scroll-snap-type: x mandatory;
  scrollbar-width: none;
}
.avatar-carousel::-webkit-scrollbar {
  display: none;
}

.avatar-item.spacer {
  height: 95px;
  pointer-events: none;
  opacity: 0;
}


.avatar-item {
  flex: 0 0 auto;
  width: clamp(70px, 8vw, 90px);
  height: clamp(70px, 8vw, 90px);
  border-radius: 50%;
  overflow: hidden;
  scroll-snap-align: center;
  position: relative;
  transition: all 0.3s ease;
  transform: scale(0.7);
  opacity: 0.4;
}

.avatar-item img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 50%;
}

.avatar-item.active {
  transform: scale(1.1);
  opacity: 1;
  z-index: 5;
  box-shadow: 0 0 15px rgba(127, 90, 240, 0.6); /* glow based on theme color */
}

      </style>
  </head>
  <body class="main-background">
    <div id="brand-logo-container" style="display:flex;">
      <div id="brand-animation" style="width: 150px; height: 150px;"></div>
    </div>
    
    <script>
      window.brandLogo = {
        lottiePlayer: null,
        hideTimeout: null,
    
        show() {
          const container = document.getElementById("brand-logo-container");
          const animContainer = document.getElementById("brand-animation");
    
          if (!container) return;
          clearTimeout(this.hideTimeout);
    
          container.style.display = "flex";
          container.style.background = "var(--container-bg)";
    
          if (!this.lottiePlayer) {
            this.lottiePlayer = lottie.loadAnimation({
              container: animContainer,
              renderer: "svg",
              loop: true,
              autoplay: true,
              path: "img/lottie/brandlogo.json",
            });
          } else {
            this.lottiePlayer.goToAndPlay(0);
          }
        },
    
        hide(delay = 1800) {
          const container = document.getElementById("brand-logo-container");
          if (!container) return;
    
          clearTimeout(this.hideTimeout);
          this.hideTimeout = setTimeout(() => {
            container.style.display = "none";
          }, delay);
        }
      };
    
      // Show brand logo immediately on page load, then hide after delay
      window.addEventListener("DOMContentLoaded", () => {
        window.brandLogo.show();
        window.brandLogo.hide(2000);  // âœ… customize delay here (2000ms = 2 seconds)
      });
    
      // When navigating away
      window.addEventListener("beforeunload", () => window.brandLogo.show());
    
      // Handle browser tab visibility changes
      document.addEventListener("visibilitychange", () => {
        if (document.visibilityState === "hidden") {
          window.brandLogo.show();
        } else {
          window.brandLogo.show();
          window.brandLogo.hide(2000);
        }
      });
    </script>
    
  
    <header>
      <div class="container">
        <div class="header">
          <a href="/" id="logo">
            <h1 id="main-logo" class="text-gradient"><i class="fas fa-microphone"></i>&nbsp;Echoes</h1>
            <h1 id="mobile-logo" class="text-gradient"><i class="fas fa-microphone"></i></h1>
          </a>
          <ul id="navbar">
            <li class="navbar">
              <a href="/login" class="text-gradient"
                >Sign In <i class="fas fa-right-to-bracket"></i
              ></a>
            </li>
            <li class="navbar dropdown">
              <div class="hamburger" id="hamburger">
                <div class="bar" id="bar1"></div>
                <!-- <div class="bar" id="bar2"></div> -->
                <div class="bar" id="bar3"></div>
              </div>
              <div id="menu" class="menu-hidden">
                <div class="container">
                  <div class="profile-header">
                    <h3 class="username">Hello,&nbsp;<span class="username">
                        Guest
                      </span></h3>
                  </div>
                  <div class="menu">
                    <div class="menu-nav">
                      <div class="menu-logo">
                        <h1 id="main-logo" class="text-gradient"><i class="fas fa-microphone"></i>&nbsp;Echoes</h1>
                        <h1 id="mobile-logo" class="text-gradient"><i class="fas fa-microphone"></i></h1>
                      </div>
                      <ul class="pages">
                        <h4>Create a tales</h4>
                        <li><a href="">View taless</a></li>
                        <li><a href="">Share a tales</a></li>
                      </ul>
                      <ul class="account">
                        <h4><i class="fas fa-user"></i> &nbsp;Account</h4>
                        <li><a href="/login" class="">Login</a></li>
                        <li><a href="/register" class="">Register</a></li>
                      </ul>
                    </div>
                    <div class="theme-switch">
                      <button id="themeToggleBtn" class="theme-toggle-btn">ðŸŒ™&nbsp;<span class="text-gradient">Early Bird</span></button>
              </div>

                    <ul class="socials">
                      <li>
                        <a class="nav-link" target="_blank" href="https://t.me/anonymcret"><i
                            class="fab fa-telegram fa-2x"></i></a>
                      </li>
                      <li>
                        <a class="nav-link" target="_blank" href=""><i class="fab fa-instagram fa-2x"></i></a>
                      </li>
                      <li>
                        <a class="nav-link" target="_blank" href=""><i class="fab fa-linkedin fa-2x"></i></a>
                      </li>
                      <li>
                        <a class="nav-link" target="_blank" href=""><i class="fab fa-github fa-2x"></i></a>
                      </li>
                    </ul>
                    <hr />
                    <div class="menu-nav-alt">
                      <ul class="info">
                        <h4>Information</h4>
                        <li><a href="">About</a></li>
                        <li><a href="">Security</a></li>
                        <li><a href="">Privacy</a></li>
                        <li><a href="">Blog</a></li>
                      </ul>
                      <ul class="support">
                        <h4>Support</h4>
                        <li><a href="">FAQ</a></li>
                        <li><a href="">Contact</a></li>
                      </ul>
                    </div>
                    <p class="lang">
                      <i class="fas fa-globe"></i> English
                    </p>
                    <button id="close"><i class="fas fa-xmark"></i></button>
                  </div>
                </div>
              </div>
            </li>
          </ul>
        </div>
      </div>
    </header>

<div class="layout-container container">
    <div class="hero">
        <!-- <i style="color: var(--text-color)" class="fas fa-lock fa-5x"></i> -->
        <h1>Become A Voice</h1>
        <p>Your privacy is our priority. Get heard, Remain Unknown</p>
  
        <div class="form-container">
          <form action="/register" method="POST" id="register">
            <div class="form-group">
              <div class="avatar-selector-wrapper">
                <h3 class="display-3">Select Your Avatar</h3>
                <div class="carousel-container">
                  <div class="center-highlight"></div>
                  <div class="avatar-carousel" id="avatarCarousel">
                    <div class="avatar-item spacer"></div> <!-- before -->
                    

                    <div class="avatar-item"><img src="./img/avatars/thumbs/whisper.jpg" alt="whisper" /></div>
                    <div class="avatar-item"><img src="./img/avatars/thumbs/pulse.jpg" alt="pulse" /></div>
                    <div class="avatar-item"><img src="./img/avatars/thumbs/reverb.jpg" alt="reverb" /></div>
                    <div class="avatar-item"><img src="./img/avatars/thumbs/phantom.jpg" alt="phantom" /></div>
                    <div class="avatar-item"><img src="./img/avatars/thumbs/sonic.jpg" alt="sonic" /></div>
                    <div class="avatar-item"><img src="./img/avatars/thumbs/chorus.jpg" alt="chorus" /></div>
                    <div class="avatar-item"><img src="./img/avatars/thumbs/vibe.jpg" alt="vibe" /></div>
                    <div class="avatar-item"><img src="./img/avatars/thumbs/Resonance.jpg" alt="Resonance" /></div>
                    
                    <!-- Add more avatars -->

                
                    <div class="avatar-item spacer"></div> <!-- after -->
                  </div>
                </div>
                
              </div>
            </div>
            <div class="form-group">
              <input type="hidden" id="selectedAvatarInput" name="selectedAvatarInput"
                      />
              <input type="hidden" id="selectedAvatarAlt" name="selectedAvatarAlt"
                      />
            </div>
            <div class="form-group">
              <label for="username">Username</label>
              <input type="text" name="username" class="form-control" placeholder="Enter your username" required />
            </div>
            <% if (locals.message) { %>
              <p style="color: red; font-style: italic"><%= message %></p>
              <% } %>
            <div class="form-group">
              <label for="email">Email</label>
              <input type="email" name="email" class="form-control" placeholder="Enter your email" required />
            </div>
            <div class="form-group">
              <label for="password">Password</label>
              <input type="password" name="password" class="form-control" placeholder="Create a password" required />
            </div>
            <button type="submit" class="btn btn-gradient">Sign Up</button>
          </form>
          <div class="login-footer">
            <p>Forgot Password? <a href="/reset" style="color: #6a7bff;">Reset Password</a></p>
          </div>
        </div>
      </div>
</div>

<button id="scrollToTopBtn" class="scroll-btn"><i class="fas fa-chevron-up"></i></button>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const scrollBtn = document.getElementById("scrollToTopBtn");

      window.addEventListener("scroll", () => {
        scrollBtn.style.display = window.scrollY > 200 ? "block" : "none";
      });

      scrollBtn.addEventListener("click", () => {
        // Animate launch
        scrollBtn.classList.add("shrink");
        scrollBtn.classList.add("launching");

        // Scroll to top
        window.scrollTo({ top: 0, behavior: "smooth" });

        // Reset animation classes after a short delay
        setTimeout(() => {
          scrollBtn.classList.remove("shrink");
          scrollBtn.classList.remove("launching");
        }, 800);
      });
    });
  </script>
    

    <footer>
      <div class="container">
        <div class="footer">
          <div class="footer-flex">
            <div class="footer-logo">
              <h1 id="main-logo" class="text-gradient"><i class="fas fa-microphone"></i>&nbsp;Echoes</h1>
          <h1 id="mobile-logo" class="text-gradient"><i class="fas fa-microphone"></i></h1>
            </div>
           <div class="footer-children">
          <center>
            <p class="viewed">
              Gists <span style="color: #999">created | veiwed: 0</span>
            </p>
          </center>
          <hr class="footer-part" />
          <ul class="socials">
            <li>
              <a target="_blank" href="link:https://t.me/iamamebo"><i class="fab fa-telegram fa-2x"></i></a>
            </li>
            <li>
              <a target="_blank" href=""><i class="fab fa-instagram fa-2x"></i></a>
            </li>
            <li>
              <a target="_blank" href=""><i class="fab fa-linkedin fa-2x"></i></a>
            </li>
            <li>
              <a target="_blank" href=""><i class="fab fa-github fa-2x"></i></a>
            </li>
          </ul>

          <hr class="footer-part"/>
          <p class="lang"><i class="fas fa-globe"></i>&nbsp;English</p>
        </div>
        </div>
      </div>
        <div class="footer-text">
            <p>&copy; <%= new Date().getFullYear() %> <span class="text-gradient">Echoes</span>. All Rights Reserved.</p>
            <p class="motto">Motto: <span class="motto-content">"Your privacy is our priority."</span></p> 
          </div>
    </footer>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const carousel = document.getElementById('avatarCarousel');
        const avatarItems = document.querySelectorAll('.avatar-item');
        const centerHighlight = document.querySelector('.center-highlight');
        const selectedAvatarInput = document.getElementById("selectedAvatarInput");
        const selectedAvatarAlt = document.getElementById("selectedAvatarAlt");
      
        function resizeHighlightToActive() {
          const active = document.querySelector('.avatar-item.active');
          if (active && centerHighlight) {
            const rect = active.getBoundingClientRect();
            const size = rect.width + 10; // halo margin
            centerHighlight.style.width = size + "px";
            centerHighlight.style.height = size + "px";
          }
        }

        function updateSpacers() {
  const carousel = document.getElementById('avatarCarousel');
  const spacers = document.querySelectorAll('.avatar-item.spacer');
  const avatar = document.querySelector('.avatar-item:not(.spacer)');

  if (!carousel || !avatar) return;

  const carouselRect = carousel.getBoundingClientRect();
  const avatarRect = avatar.getBoundingClientRect();

  // Center point of the carousel
  const centerOffset = carouselRect.width / 2;

  // Spacer should equal center position minus half avatar width
  const spacerWidth = centerOffset - (avatarRect.width / 2);

  spacers.forEach(spacer => {
    spacer.style.width = spacerWidth + "px";
  });
}


      
        function updateCenterSelection() {
          let closest = null;
          let closestDistance = Infinity;
      
          document.querySelectorAll('.avatar-item:not(.spacer)').forEach(item => {
            const rect = item.getBoundingClientRect();
            const centerX = window.innerWidth / 2;
            const itemCenter = rect.left + rect.width / 2;
            const distance = Math.abs(centerX - itemCenter);
      
            if (distance < closestDistance) {
              closestDistance = distance;
              closest = item;
            }
          });
      
          document.querySelectorAll('.avatar-item').forEach(item =>
            item.classList.remove('active')
          );
      
          if (closest) {
            closest.classList.add('active');
            const img = closest.querySelector('img');
            if (img) {
              const relativePath = img.getAttribute("src").replace(/^.*\/img/, "/img");
              selectedAvatarInput.value = relativePath;
              selectedAvatarAlt.value = img.alt.toLowerCase();
            }
            resizeHighlightToActive();
          }
        }
      
        function scrollToCenter(element) {
          const carouselRect = carousel.getBoundingClientRect();
          const elementRect = element.getBoundingClientRect();
          const offset = (elementRect.left + elementRect.width / 2) - (carouselRect.left + carouselRect.width / 2);
          carousel.scrollBy({ left: offset, behavior: 'smooth' });
        }
      
        avatarItems.forEach(item => {
          item.addEventListener('click', () => {
            scrollToCenter(item);
            const img = item.querySelector('img');
            if (img) {
              const relativePath = img.getAttribute("src").replace(/^.*\/img/, "/img");
              selectedAvatarInput.value = relativePath;
              selectedAvatarAlt.value = img.alt.toLowerCase();
            }
          });
        });
      
        carousel.addEventListener('scroll', () => {
          window.requestAnimationFrame(updateCenterSelection);
        });
      
        document.addEventListener('keydown', (e) => {
          const active = document.querySelector('.avatar-item.active');
          if (!active) return;
          if (e.key === "ArrowRight" && active.nextElementSibling) {
            scrollToCenter(active.nextElementSibling);
          } else if (e.key === "ArrowLeft" && active.previousElementSibling) {
            scrollToCenter(active.previousElementSibling);
          }
        });
      
      

// Run again on resize (responsive fix)
window.addEventListener('resize', () => {
  updateSpacers();
  updateCenterSelection(); // make sure highlight stays locked
});

      
        // Initial center on page load (middle avatar)
        setTimeout(() => {
          const middleIndex = Math.floor(avatarItems.length / 2);
          const middleAvatar = avatarItems[middleIndex];
          if (middleAvatar) {
            scrollToCenter(middleAvatar);
            updateCenterSelection();
            // Run once on load
updateSpacers();
          }
        }, 200);
      });
      </script>
      
    

    <script src="/js/app.js"></script>
    <script src="/js/defaultTheme.js"></script>
  </body>
</html>
